-- ============================================
-- TribeCore Enterprise HCM - Database Migration
-- All Remaining Enterprise Modules
-- Date: October 14, 2025
-- ============================================

-- Enable UUID extension if not already enabled
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- ==================== ISO 30414 ANALYTICS ====================

CREATE TABLE IF NOT EXISTS hc_metrics (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  "organizationId" UUID NOT NULL REFERENCES organizations(id) ON DELETE CASCADE,
  
  "metricCode" VARCHAR(100) NOT NULL,
  "metricName" VARCHAR(255) NOT NULL,
  description TEXT,
  category VARCHAR(50) NOT NULL CHECK (category IN ('COSTS', 'PRODUCTIVITY', 'RECRUITMENT', 'TURNOVER', 'DIVERSITY', 'LEADERSHIP', 'HEALTH_SAFETY', 'SKILLS', 'CULTURE', 'COMPLIANCE')),
  frequency VARCHAR(20) NOT NULL CHECK (frequency IN ('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'ANNUALLY')),
  
  "periodStart" DATE NOT NULL,
  "periodEnd" DATE NOT NULL,
  "fiscalYear" VARCHAR(10),
  quarter VARCHAR(5),
  
  "numericValue" DECIMAL(18,4),
  "textValue" TEXT,
  unit VARCHAR(50),
  
  "calculationInputs" JSONB,
  "calculationFormula" TEXT,
  "calculatedAt" TIMESTAMP,
  "calculatedBy" VARCHAR(255),
  
  "previousPeriodValue" DECIMAL(18,4),
  "changePercent" DECIMAL(18,4),
  "industryBenchmark" DECIMAL(18,4),
  "targetValue" DECIMAL(18,4),
  
  verified BOOLEAN DEFAULT false,
  "verifiedBy" VARCHAR(255),
  "verifiedAt" TIMESTAMP,
  "dataSource" VARCHAR(100),
  "dataQualityScore" INTEGER,
  notes TEXT,
  
  "includeInBoardReport" BOOLEAN DEFAULT false,
  "includeInESGReport" BOOLEAN DEFAULT false,
  "isPublic" BOOLEAN DEFAULT true,
  
  breakdown JSONB,
  metadata JSONB,
  
  "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "deletedAt" TIMESTAMP
);

CREATE INDEX idx_hc_metrics_org_category ON hc_metrics("organizationId", category, "periodStart");

CREATE TABLE IF NOT EXISTS hc_reports (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  "organizationId" UUID NOT NULL REFERENCES organizations(id) ON DELETE CASCADE,
  
  "reportId" VARCHAR(50) UNIQUE NOT NULL,
  title VARCHAR(255) NOT NULL,
  "reportType" VARCHAR(50) NOT NULL CHECK ("reportType" IN ('BOARD_REPORT', 'ESG_REPORT', 'ANNUAL_HC_REPORT', 'QUARTERLY_REVIEW', 'CUSTOM')),
  status VARCHAR(50) NOT NULL DEFAULT 'DRAFT' CHECK (status IN ('DRAFT', 'PENDING_REVIEW', 'APPROVED', 'PUBLISHED', 'ARCHIVED')),
  
  "periodStart" DATE NOT NULL,
  "periodEnd" DATE NOT NULL,
  "fiscalYear" VARCHAR(10),
  
  metrics JSONB NOT NULL,
  "executiveSummary" TEXT,
  "keyFindings" JSONB,
  recommendations JSONB,
  charts JSONB,
  
  "generatedBy" VARCHAR(255) NOT NULL,
  "generatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "autoGenerated" BOOLEAN DEFAULT false,
  
  "reviewedBy" VARCHAR(255),
  "reviewedAt" TIMESTAMP,
  "approvedBy" VARCHAR(255),
  "approvedAt" TIMESTAMP,
  "approvalNotes" TEXT,
  
  "publishedAt" TIMESTAMP,
  "publishedTo" VARCHAR(100),
  "externalUrl" VARCHAR(500),
  "pdfUrl" VARCHAR(500),
  
  version INTEGER DEFAULT 1,
  "previousVersionId" VARCHAR(50),
  
  metadata JSONB,
  
  "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_hc_reports_org_type ON hc_reports("organizationId", "reportType", "periodStart");

-- ==================== POSITION MANAGEMENT ====================

CREATE TABLE IF NOT EXISTS positions (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  "organizationId" UUID NOT NULL REFERENCES organizations(id) ON DELETE CASCADE,
  
  "positionId" VARCHAR(50) UNIQUE NOT NULL,
  "positionTitle" VARCHAR(255) NOT NULL,
  "positionDescription" TEXT,
  status VARCHAR(50) NOT NULL DEFAULT 'PENDING_APPROVAL' CHECK (status IN ('ACTIVE', 'VACANT', 'FROZEN', 'PENDING_APPROVAL', 'CLOSED')),
  "positionType" VARCHAR(50) NOT NULL DEFAULT 'PERMANENT' CHECK ("positionType" IN ('PERMANENT', 'TEMPORARY', 'CONTRACT', 'INTERN')),
  
  department VARCHAR(255) NOT NULL,
  division VARCHAR(255),
  location VARCHAR(255),
  "costCenter" VARCHAR(100),
  "businessUnit" VARCHAR(255),
  
  "reportsToPositionId" VARCHAR(50),
  "reportingLevel" INTEGER DEFAULT 0,
  
  "jobCode" VARCHAR(100),
  "jobFamily" VARCHAR(100),
  "jobLevel" VARCHAR(50),
  grade VARCHAR(50),
  
  fte DECIMAL(5,2) DEFAULT 1.0,
  "isShared" BOOLEAN DEFAULT false,
  "headcountBudget" INTEGER DEFAULT 1,
  
  "incumbentEmployeeId" UUID REFERENCES employees(id),
  "filledDate" DATE,
  
  "isVacant" BOOLEAN DEFAULT false,
  "vacantSince" DATE,
  "daysVacant" INTEGER DEFAULT 0,
  "vacancyReason" VARCHAR(100),
  "linkedRequisitionId" VARCHAR(50),
  
  "minSalary" DECIMAL(12,2),
  "midSalary" DECIMAL(12,2),
  "maxSalary" DECIMAL(12,2),
  "salaryCurrency" VARCHAR(10),
  "annualBudget" DECIMAL(12,2),
  
  "effectiveDate" DATE NOT NULL,
  "endDate" DATE,
  
  approved BOOLEAN DEFAULT false,
  "approvedBy" VARCHAR(255),
  "approvedAt" TIMESTAMP,
  "approvalNotes" TEXT,
  
  requirements JSONB,
  metadata JSONB,
  
  "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "deletedAt" TIMESTAMP
);

CREATE INDEX idx_positions_org_status ON positions("organizationId", status);
CREATE INDEX idx_positions_vacant ON positions("organizationId", "isVacant");
CREATE INDEX idx_positions_id ON positions("positionId");

CREATE TABLE IF NOT EXISTS org_scenarios (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  "organizationId" UUID NOT NULL REFERENCES organizations(id) ON DELETE CASCADE,
  
  "scenarioId" VARCHAR(50) UNIQUE NOT NULL,
  "scenarioName" VARCHAR(255) NOT NULL,
  description TEXT,
  status VARCHAR(50) NOT NULL DEFAULT 'DRAFT' CHECK (status IN ('DRAFT', 'UNDER_REVIEW', 'APPROVED', 'IMPLEMENTED')),
  
  "effectiveDate" DATE NOT NULL,
  "baselineSnapshot" JSONB NOT NULL,
  "proposedChanges" JSONB NOT NULL,
  "impactAnalysis" JSONB,
  
  "createdBy" VARCHAR(255),
  metadata JSONB,
  
  "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_org_scenarios_org ON org_scenarios("organizationId", status);

-- ==================== SKILLS CLOUD ====================

CREATE TABLE IF NOT EXISTS skills (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  "organizationId" UUID NOT NULL REFERENCES organizations(id) ON DELETE CASCADE,
  
  "skillCode" VARCHAR(100) UNIQUE NOT NULL,
  "skillName" VARCHAR(255) NOT NULL,
  description TEXT,
  category VARCHAR(50) NOT NULL CHECK (category IN ('TECHNICAL', 'SOFT', 'LEADERSHIP', 'DOMAIN', 'LANGUAGE', 'CERTIFICATION')),
  
  aliases TEXT[],
  "proficiencyLevels" TEXT,
  
  "isCritical" BOOLEAN DEFAULT false,
  "isEmerging" BOOLEAN DEFAULT false,
  "isActive" BOOLEAN DEFAULT true,
  
  metadata JSONB,
  
  "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_skills_org ON skills("organizationId", "isActive");
CREATE INDEX idx_skills_name ON skills("skillName");

CREATE TABLE IF NOT EXISTS employee_skills (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  "employeeId" UUID NOT NULL REFERENCES employees(id) ON DELETE CASCADE,
  "skillId" UUID NOT NULL REFERENCES skills(id) ON DELETE CASCADE,
  
  "proficiencyLevel" VARCHAR(50) NOT NULL CHECK ("proficiencyLevel" IN ('BEGINNER', 'INTERMEDIATE', 'ADVANCED', 'EXPERT')),
  "proficiencyScore" INTEGER,
  source VARCHAR(50) NOT NULL CHECK (source IN ('SELF_REPORTED', 'MANAGER_ENDORSED', 'PEER_ENDORSED', 'ASSESSMENT', 'CERTIFICATION', 'PROJECT')),
  
  "acquiredDate" DATE,
  "lastUsedDate" DATE,
  "yearsOfExperience" INTEGER,
  
  verified BOOLEAN DEFAULT false,
  "verifiedBy" VARCHAR(255),
  "verifiedAt" TIMESTAMP,
  
  "endorsementCount" INTEGER DEFAULT 0,
  "willingToMentor" BOOLEAN DEFAULT true,
  
  evidence JSONB,
  metadata JSONB,
  
  "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  
  UNIQUE("employeeId", "skillId")
);

CREATE INDEX idx_employee_skills_employee ON employee_skills("employeeId");
CREATE INDEX idx_employee_skills_skill ON employee_skills("skillId");

CREATE TABLE IF NOT EXISTS marketplace_opportunities (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  "organizationId" UUID NOT NULL REFERENCES organizations(id) ON DELETE CASCADE,
  
  "opportunityId" VARCHAR(50) UNIQUE NOT NULL,
  title VARCHAR(255) NOT NULL,
  description TEXT NOT NULL,
  "opportunityType" VARCHAR(50) NOT NULL CHECK ("opportunityType" IN ('PROJECT', 'GIG', 'MENTORSHIP', 'STRETCH_ASSIGNMENT', 'ROTATION')),
  status VARCHAR(50) NOT NULL DEFAULT 'OPEN' CHECK (status IN ('OPEN', 'FILLED', 'CLOSED', 'CANCELLED')),
  
  "requiredSkills" TEXT[] NOT NULL,
  "optionalSkills" TEXT[],
  
  department VARCHAR(255),
  location VARCHAR(255),
  "durationWeeks" INTEGER,
  "commitmentPercentage" INTEGER,
  
  "startDate" DATE NOT NULL,
  "endDate" DATE,
  
  "postedBy" VARCHAR(255) NOT NULL,
  "postedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "assignedTo" UUID,
  
  "applicantCount" INTEGER DEFAULT 0,
  benefits JSONB,
  metadata JSONB,
  
  "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_opportunities_org_status ON marketplace_opportunities("organizationId", status);

-- ==================== COMPENSATION ====================

CREATE TABLE IF NOT EXISTS compensation_bands (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  "organizationId" UUID NOT NULL REFERENCES organizations(id) ON DELETE CASCADE,
  
  "bandCode" VARCHAR(50) NOT NULL,
  "bandName" VARCHAR(255) NOT NULL,
  "jobFamily" VARCHAR(100),
  "jobLevel" VARCHAR(50),
  
  "minSalary" DECIMAL(12,2) NOT NULL,
  "midSalary" DECIMAL(12,2) NOT NULL,
  "maxSalary" DECIMAL(12,2) NOT NULL,
  currency VARCHAR(10) DEFAULT 'USD',
  "payFrequency" VARCHAR(20),
  
  "effectiveDate" DATE NOT NULL,
  "endDate" DATE,
  "isActive" BOOLEAN DEFAULT true,
  
  metadata JSONB,
  
  "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_comp_bands_org ON compensation_bands("organizationId", "isActive");

CREATE TABLE IF NOT EXISTS compensation_reviews (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  "organizationId" UUID NOT NULL REFERENCES organizations(id) ON DELETE CASCADE,
  
  "reviewId" VARCHAR(50) UNIQUE NOT NULL,
  "employeeId" UUID NOT NULL REFERENCES employees(id),
  
  "fiscalYear" VARCHAR(10) NOT NULL,
  "reviewCycle" VARCHAR(50) NOT NULL,
  status VARCHAR(50) NOT NULL DEFAULT 'DRAFT' CHECK (status IN ('DRAFT', 'PENDING_MANAGER', 'PENDING_HR', 'APPROVED', 'IMPLEMENTED')),
  
  "currentSalary" DECIMAL(12,2) NOT NULL,
  "proposedSalary" DECIMAL(12,2),
  "increasePercent" DECIMAL(5,2),
  "bonusAmount" DECIMAL(12,2),
  "equityGrant" DECIMAL(12,2),
  
  rationale TEXT,
  "proposedBy" VARCHAR(255),
  "approvedBy" VARCHAR(255),
  "effectiveDate" DATE,
  
  metadata JSONB,
  
  "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_comp_reviews_employee ON compensation_reviews("employeeId");
CREATE INDEX idx_comp_reviews_status ON compensation_reviews(status);

-- ==================== INTEGRATIONS ====================

CREATE TABLE IF NOT EXISTS webhooks (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  "organizationId" UUID NOT NULL REFERENCES organizations(id) ON DELETE CASCADE,
  
  "webhookName" VARCHAR(255) NOT NULL,
  "targetUrl" VARCHAR(500) NOT NULL,
  events TEXT[] NOT NULL,
  "isActive" BOOLEAN DEFAULT true,
  secret VARCHAR(500),
  
  "successCount" INTEGER DEFAULT 0,
  "failureCount" INTEGER DEFAULT 0,
  "lastTriggeredAt" TIMESTAMP,
  
  headers JSONB,
  metadata JSONB,
  
  "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_webhooks_org ON webhooks("organizationId", "isActive");

CREATE TABLE IF NOT EXISTS api_connectors (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  "organizationId" UUID NOT NULL REFERENCES organizations(id) ON DELETE CASCADE,
  
  "connectorName" VARCHAR(255) NOT NULL,
  "connectorType" VARCHAR(50) NOT NULL CHECK ("connectorType" IN ('SCIM', 'OKTA', 'AZURE_AD', 'WORKDAY', 'SUCCESSFACTORS', 'SLACK', 'TEAMS', 'BAMBOO_HR', 'CUSTOM_API')),
  "baseUrl" VARCHAR(500) NOT NULL,
  "authConfig" JSONB NOT NULL,
  
  "isActive" BOOLEAN DEFAULT true,
  "autoSync" BOOLEAN DEFAULT false,
  "syncIntervalMinutes" INTEGER,
  "lastSyncAt" TIMESTAMP,
  "syncStatus" JSONB,
  
  "fieldMapping" JSONB,
  metadata JSONB,
  
  "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_api_connectors_org ON api_connectors("organizationId");

-- ============================================
-- Migration Complete
-- Total Tables Created: 14
-- ============================================

COMMENT ON TABLE hc_metrics IS 'ISO 30414 human capital metrics for board reporting';
COMMENT ON TABLE positions IS 'Position management independent of people';
COMMENT ON TABLE skills IS 'Skills taxonomy for skills cloud';
COMMENT ON TABLE marketplace_opportunities IS 'Internal talent marketplace for gigs and projects';
COMMENT ON TABLE compensation_bands IS 'Salary bands and compensation structure';
COMMENT ON TABLE webhooks IS 'Webhook subscriptions for event-driven integrations';
