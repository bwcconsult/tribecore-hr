import { Entity, Column, ManyToOne, JoinColumn } from 'typeorm';
import { BaseEntity } from '../../../common/entities/base.entity';
import { Employee } from '../../employees/entities/employee.entity';

export enum NudgeType {
  OBJECTIVE_CHECK_IN = 'OBJECTIVE_CHECK_IN',
  OBJECTIVE_AT_RISK = 'OBJECTIVE_AT_RISK',
  ONE_ON_ONE_REMINDER = 'ONE_ON_ONE_REMINDER',
  FEEDBACK_REQUEST = 'FEEDBACK_REQUEST',
  WELLBEING_CHECK = 'WELLBEING_CHECK',
  REVIEW_DUE = 'REVIEW_DUE',
  CALIBRATION_PENDING = 'CALIBRATION_PENDING',
  ACTION_OVERDUE = 'ACTION_OVERDUE',
  PIP_CHECK_IN = 'PIP_CHECK_IN',
  RECOGNITION_PROMPT = 'RECOGNITION_PROMPT',
}

export enum NudgePriority {
  LOW = 'LOW',
  MEDIUM = 'MEDIUM',
  HIGH = 'HIGH',
  URGENT = 'URGENT',
}

export enum NudgeStatus {
  PENDING = 'PENDING',
  SENT = 'SENT',
  VIEWED = 'VIEWED',
  ACTED_ON = 'ACTED_ON',
  DISMISSED = 'DISMISSED',
  EXPIRED = 'EXPIRED',
}

@Entity('nudges')
export class Nudge extends BaseEntity {
  @Column()
  userId: string;

  @ManyToOne(() => Employee)
  @JoinColumn({ name: 'userId' })
  user: Employee;

  @Column({
    type: 'enum',
    enum: NudgeType,
  })
  type: NudgeType;

  @Column()
  title: string;

  @Column({ type: 'text' })
  message: string;

  @Column({
    type: 'enum',
    enum: NudgePriority,
    default: NudgePriority.MEDIUM,
  })
  priority: NudgePriority;

  @Column({
    type: 'enum',
    enum: NudgeStatus,
    default: NudgeStatus.PENDING,
  })
  status: NudgeStatus;

  @Column({ type: 'jsonb', nullable: true })
  actions: Array<{
    label: string;
    url: string;
    action: string;
  }>;

  @Column({ nullable: true })
  relatedEntityType: string; // Objective, OneOnOne, ReviewCycle, etc.

  @Column({ nullable: true })
  relatedEntityId: string;

  @Column({ type: 'timestamp', nullable: true })
  scheduledFor: Date;

  @Column({ type: 'timestamp', nullable: true })
  sentAt: Date;

  @Column({ type: 'timestamp', nullable: true })
  viewedAt: Date;

  @Column({ type: 'timestamp', nullable: true })
  actedOnAt: Date;

  @Column({ type: 'timestamp', nullable: true })
  dismissedAt: Date;

  @Column({ type: 'timestamp', nullable: true })
  expiresAt: Date;

  @Column({ default: false })
  sendEmail: boolean;

  @Column({ default: false })
  sendSlack: boolean;

  @Column({ default: false })
  sendTeams: boolean;

  @Column({ default: false })
  emailSent: boolean;

  @Column({ default: false })
  slackSent: boolean;

  @Column({ default: false })
  teamsSent: boolean;

  @Column({ type: 'jsonb', nullable: true })
  metadata: {
    reason?: string;
    autoGenerated?: boolean;
    reminderNumber?: number;
    escalationLevel?: number;
  };
}
