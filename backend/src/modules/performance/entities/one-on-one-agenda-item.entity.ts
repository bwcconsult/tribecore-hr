import { Entity, Column, ManyToOne, JoinColumn } from 'typeorm';
import { BaseEntity } from '../../../common/entities/base.entity';
import { OneOnOne } from './one-on-one.entity';

export enum AgendaItemType {
  OBJECTIVE = 'OBJECTIVE',
  ACTION = 'ACTION',
  WELLBEING = 'WELLBEING',
  FEEDBACK = 'FEEDBACK',
  RECOGNITION = 'RECOGNITION',
  CUSTOM = 'CUSTOM',
  WINS = 'WINS',
  BLOCKERS = 'BLOCKERS',
  CAREER = 'CAREER',
  COACHING = 'COACHING',
}

export enum AgendaItemStatus {
  PENDING = 'PENDING',
  DISCUSSED = 'DISCUSSED',
  DEFERRED = 'DEFERRED',
  CONVERTED_TO_ACTION = 'CONVERTED_TO_ACTION',
}

@Entity('one_on_one_agenda_items')
export class OneOnOneAgendaItem extends BaseEntity {
  @Column()
  oneOnOneId: string;

  @ManyToOne('OneOnOne', 'agendaItems', { onDelete: 'CASCADE' })
  @JoinColumn({ name: 'oneOnOneId' })
  oneOnOne: any;

  @Column({
    type: 'enum',
    enum: AgendaItemType,
  })
  type: AgendaItemType;

  @Column({ nullable: true })
  refId: string; // ID of related objective, action, etc.

  @Column()
  title: string;

  @Column({ type: 'text', nullable: true })
  description: string;

  @Column({ type: 'int' })
  orderIndex: number;

  @Column({
    type: 'enum',
    enum: AgendaItemStatus,
    default: AgendaItemStatus.PENDING,
  })
  status: AgendaItemStatus;

  @Column({ default: false })
  isAutoGenerated: boolean;

  @Column({ nullable: true })
  addedBy: string; // employeeId or managerId

  @Column({ type: 'text', nullable: true })
  notes: string;

  @Column({ type: 'int', nullable: true })
  timeSpentMinutes: number;

  @Column({ type: 'jsonb', nullable: true })
  metadata: {
    urgency?: 'LOW' | 'MEDIUM' | 'HIGH';
    confidential?: boolean;
    actionCreatedId?: string;
  };
}
