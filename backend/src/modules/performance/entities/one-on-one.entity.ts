import { Entity, Column, ManyToOne, OneToMany, JoinColumn } from 'typeorm';
import { BaseEntity } from '../../../common/entities/base.entity';
import { Employee } from '../../employees/entities/employee.entity';

export enum OneOnOneStatus {
  SCHEDULED = 'SCHEDULED',
  IN_PROGRESS = 'IN_PROGRESS',
  COMPLETED = 'COMPLETED',
  CANCELED = 'CANCELED',
  RESCHEDULED = 'RESCHEDULED',
}

@Entity('one_on_ones')
export class OneOnOne extends BaseEntity {
  @Column()
  employeeId: string;

  @ManyToOne(() => Employee)
  @JoinColumn({ name: 'employeeId' })
  employee: Employee;

  @Column()
  managerId: string;

  @ManyToOne(() => Employee)
  @JoinColumn({ name: 'managerId' })
  manager: Employee;

  @Column({ type: 'timestamp' })
  scheduledAt: Date;

  @Column({ type: 'int', default: 30 })
  durationMinutes: number;

  @Column({
    type: 'enum',
    enum: OneOnOneStatus,
    default: OneOnOneStatus.SCHEDULED,
  })
  status: OneOnOneStatus;

  @Column({ type: 'text', nullable: true })
  notes: string;

  @Column({ type: 'text', nullable: true })
  employeeNotes: string;

  @Column({ type: 'text', nullable: true })
  managerNotes: string;

  @Column({ type: 'timestamp', nullable: true })
  startedAt: Date;

  @Column({ type: 'timestamp', nullable: true })
  completedAt: Date;

  @OneToMany('OneOnOneAgendaItem', 'oneOnOne')
  agendaItems: any[];

  @Column({ default: false })
  agendaAutoGenerated: boolean;

  @Column({ type: 'jsonb', nullable: true })
  decisions: Array<{
    decision: string;
    owner: string;
    dueDate?: Date;
  }>;

  @Column({ type: 'simple-array', nullable: true })
  topics: string[]; // Quick tags: Career, Performance, Wellbeing, Feedback, etc.

  @Column({ nullable: true })
  location: string; // Meeting room, Zoom link, etc.

  @Column({ type: 'jsonb', nullable: true })
  metadata: {
    previousOneOnOneId?: string;
    recurringSeriesId?: string;
    reminderSent?: boolean;
    followUpRequired?: boolean;
  };
}
